---

- name: get last kubernetes tag
  shell: curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt
  register: kube_tag

- name: get api-server, scheduler, controller-manager
  get_url:
    dest: /usr/bin
    url: https://storage.googleapis.com/kubernetes-release/release/{{ kube_tag.stdout_lines[0] }}/bin/linux/{{ hardware_architechture }}/{{ item }}
    mode: 0755
  with_items: 
  - kube-apiserver
  - kube-controller-manager
  - kube-scheduler

- name: get etcd and etcdctl compressed file
  get_url:
    dest: /temp
    url: https://github.com/coreos/etcd/releases/download/v3.3.13/etcd-v3.3.13-linux-{{ hardware_architechture }}.tar.gz

- name: extract etcd files 
  unarchive: 
    remote_src: yes
    src: /temp
    dest: /
    exclude: 
      - Documentation
      - README*

- name: mv file from parent folder
  shell: mv /etcd*/* /usr/bin

- name: Generate config files
  template: 
    src: "{{ item }}"
    dest: /etc/kubernetes/"{{ item[:-3] }}"
  with_items:
    - controller-manager.kubeconfig.j2
    - scheduler.kubeconfig.j2

- name: Generate services
  template: 
    src: "{{ item ~ '.j2' }}"
    dest: /etc/systemd/system/{{ item }}
  with_items: "{{ services }}"
  
- name: Enables and start services
  service:
    name: "{{ item }}"
    enabled: yes
  with_items: "{{ services }}"

# - name: Install docker.io, kubelet, kubectl
#   apt:
#     force_apt_get: yes
#     name: [
#       "docker.io", "kubelet", "kubectl"
#     ]
#     state: present
#     update_cache: yes

# - name: Reload systemd unit if args were changed.
#   systemd:
#     state: restarted
#     daemon_reload: true
#     name: kubelet
#   when: kubelet_config_file is changed

# - name: Ensure kubelet is started and enabled at boot.
#   service:
#     name: kubelet
#     state: started
#     enabled: true


...
