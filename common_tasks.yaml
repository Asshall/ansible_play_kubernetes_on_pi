- name: Get root partition name
  block: 
  - command: lsblk -lJ
    register: result
  - set_fact: 
      partition_name: "{{ item.name }}"
      partition_size: "{{ item.size }}"
    with_items: "{{ ((result.stdout | from_json ).blockdevices | selectattr('mountpoint', 'equalto', '/') | list) }}"

- name: Resize root partition
  block:
  - command: lsblk -nopkname /dev/{{ partition_name }}
    register: result
  - set_fact: device_name={{ result.stdout }}
  - parted: device=/dev/{{ device_name }} unit=GB
    register: disk_info
  - set_fact: disk_size={{ disk_info.disk.size  ~ 'GB' }}
  - command: parted /dev/{{ device_name }} --script -- resizepart {{ partition_name[-1:] ~ ' ' ~ disk_size }} 
  - command: resize2fs /dev/{{ partition_name }}
  when: (partition_size[:-1] | int) < 3 
  # - set_fact: last_part_info={{ [(last.end | int ) ~ 'KiB', (last.num + 1), last.name] }}
    # with_items: "{{ result.partitions }}"
    # loop_control:
    #   loop_var: last



# - name: Create partition with unused space
#   parted:
#    device: /dev/{{ device_name }}
#    number: "{{ last_part_info[1] }}"
#    part_start: "{{ last_part_info[0] }}"
#    name: ansible_generated
#    state: present
#    label: gpt
#   when: last_part_info[2] != 'ansible_generated'

- name: Update and upgrade packages
  apt:
    name: "*"
    state: latest
    update_cache: yes
    force_apt_get: yes
  when: test != "true" or test is undefined
